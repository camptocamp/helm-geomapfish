---
# Source: geomapfish/templates/pdb.yaml
apiVersion: policy/v1
kind: PodDisruptionBudget
metadata:
  name: test-geomapfish-geoportal
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
spec:
  maxUnavailable: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/serviceaccount.yaml
apiVersion: v1
kind: ServiceAccount
metadata:
  name: full
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/configmap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: test-geomapfish-env
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: env
data:
  RELEASE_NAME: test
  GEOPORTAL_IMAGE_TAG: "latest"
  ALEMBIC_IMAGE_TAG: "latest"
  TOOLS_IMAGE_TAG: "latest"
  CONFIG_IMAGE_TAG: "latest"
  STATD_IMAGE_TAG: "latest"
  BUSYBOX_IMAGE_TAG: "latest"
---
# Source: geomapfish/templates/mutualize-role.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: test-geomapfish-mutualize
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: mutualize
rules:
- apiGroups:
    - camptocamp.com
  resources:
    - sharedconfigconfigs
    - sharedconfigsources
    - githubwebhooks
  verbs:
    - get
    - watch
    - list
    - create
    - update
    - patch
    - delete
---
# Source: geomapfish/templates/mutualize-rolebinding.yaml
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: test-geomapfish-mutualize
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: mutualize
subjects:
- kind: Group
  name: group1
  apiGroup: rbac.authorization.k8s.io
- kind: Group
  name: group2
  apiGroup: rbac.authorization.k8s.io
roleRef:
  kind: Role
  name: test-geomapfish-mutualize
  apiGroup: rbac.authorization.k8s.io
---
# Source: geomapfish/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-geomapfish-geoportal
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
    prometheus: 'true'
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: http
      protocol: TCP
      name: http
  selector:
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-geomapfish-geoportal-prometheus
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
spec:
  type: ClusterIP
  ports:
    - port: 80
      targetPort: prometheus
      protocol: TCP
      name: prometheus
  selector:
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
---
# Source: geomapfish/templates/tiles-service.yaml
apiVersion: v1
kind: Service
metadata:
  name: test-geomapfish-tiles
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tiles
spec:
  type: ExternalName
  externalName: service.namespace.svc.cluster.local
  ports:
  - name: http
    protocol: TCP
    port: 80
    targetPort: 80
---
# Source: geomapfish/templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-geomapfish-geoportal
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: geoportal
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: geoportal
        foo: "bar0"
    spec:
      serviceAccountName: full
      securityContext:
        {}
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app.kubernetes.io/component
                operator: In
                values:
                - main
              - key: app.kubernetes.io/instance
                operator: In
                values:
                - test
              - key: app.kubernetes.io/name
                operator: In
                values:
                - geomapfish
            topologyKey: "kubernetes.io/hostname"
      initContainers:
        - name: config
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/<project>-config:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - bash
            - -c
            - cp -a /etc/geomapfish/* /etc/geomapfish-volume/ &&
              cp -a /usr/local/tomcat/webapps/ROOT/print-apps/* /etc/print-volume/
          volumeMounts:
            - mountPath: /etc/geomapfish-volume
              name: geomapfish
            - mountPath: /etc/print-volume
              name: print
      containers:
        - name: geoportal
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfishapp-geoportal:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}

          volumeMounts:
            - mountPath: /etc/geomapfish
              name: geomapfish
              readOnly: true
            - mountPath: /usr/local/tomcat/webapps/ROOT/print-apps
              name: print
              readOnly: true

          ports:
            - name: http
              containerPort: 8080
              protocol: TCP

          livenessProbe:
            httpGet:
              path: "/c2c/health_check?max_level=0"
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: "/c2c/health_check?max_level=0"
              port: http
            initialDelaySeconds: 30
            timeoutSeconds: 30
            periodSeconds: 20

      volumes:
        - name: geomapfish
          emptyDir: {}
        - name: print
          emptyDir: {}
---
# Source: geomapfish/templates/tools-deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: test-geomapfish-tools
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: tools
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  revisionHistoryLimit: 3
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app.kubernetes.io/name: geomapfish
      app.kubernetes.io/instance: test
      app.kubernetes.io/component: tools
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: tools
        foo: "bar2"
    spec:
      serviceAccountName: full
      securityContext:
        {}
      affinity:
        {}
      containers:
        - name: tools
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfish-tools:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
           - sleep
           - infinity
---
# Source: geomapfish/templates/alembic-job.yaml
apiVersion: batch/v1
kind: Job
metadata:
  name: test-geomapfish-alembic
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: alembic
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  activeDeadlineSeconds: 600
  template:
    metadata:
      labels:
        app.kubernetes.io/name: geomapfish
        app.kubernetes.io/instance: test
        app.kubernetes.io/component: alembic
        foo: "bar1"
    spec:
      serviceAccountName: full
      securityContext:
        {}
      affinity:
        {}
      restartPolicy: Never
      containers:
        - name: alembic
          securityContext:
            runAsNonRoot: true
            runAsUser: 33
          image: "camptocamp/geomapfishapp-geoportal:latest"
          imagePullPolicy: IfNotPresent
          terminationMessagePolicy: FallbackToLogsOnError
          resources:
            {}
          args:
            - bash
            - -c
            - alembic --name=static upgrade head
---
# Source: geomapfish/templates/ingress.yaml
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: test-geomapfish-geoportal-main
  labels:
    helm.sh/chart: geomapfish
    app.kubernetes.io/managed-by: Helm
    app.kubernetes.io/name: geomapfish
    app.kubernetes.io/instance: test
    app.kubernetes.io/component: geoportal
spec:
  tls:
    - hosts:
        - gmf.local
      secretName: mytls
  rules:
    - host: gmf.local
      http:
        paths:
          - path: /
            pathType: Prefix
            backend:
              service:
                name: test-geomapfish-geoportal
                port:
                  number: 80
          - path: "/custom/"
            pathType: Prefix
            backend:
              service:
                name: geomapfish-env-version-custom-feedback
                port:
                  number: 80
