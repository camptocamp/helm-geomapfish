global:
  configMapNameOverride:
    env: test-geomapfish-env

sharedAnchor:
  c2cwsgiutilsEnv: &c2cwsgiutilsEnv
    C2C_LOG_VIEW_ENABLED:
      value: '1'
    C2C_DEBUG_VIEW_ENABLED:
      value: '1'
    C2C_SQL_PROFILER_ENABLED:
      value: '1'
    LOG_TYPE:
      value: console
    C2C_REQUESTS_DEFAULT_TIMEOUT:
      value: '30'
    GUNICORN_WORKERS:
      value: '2'
    GUNICORN_THREADS:
      value: '10'
    GUNICORN_TIMEOUT:
      value: '30'
    GUNICORN_MAX_REQUESTS:
      value: '2000'
    GUNICORN_MAX_REQUESTS_JITTER:
      value: '200'
    GUNICORN_LIMIT_REQUEST_LINE:
      value: '8190'
    GUNICORN_ACCESS_LOG_FORMAT:
      value: '%(H)s %({Host}i)s %(m)s %(U)s?%(q)s "%(f)s" "%(a)s" %(s)s %(B)s %(D)s %(p)s'

  dbEnv: &dbEnv
    PGPORT:
      value: '5432'
    PGPORT_SLAVE:
      value: '5432'
    PGHOST:
      value: test-pg-postgresql
    PGHOST_SLAVE:
      value: test-pg-postgresql
    PGDATABASE:
      value: postgres
    PGUSER:
      value: postgres
    PGPASSWORD:
      value: mySuperTestingPassword
    PGSCHEMA:
      value: main
    PGSCHEMA_STATIC:
      value: main_static
    POSTGRESQL_STATEMENT_TIMEOUT:
      value: '30000' # milliseconds
    PGOPTIONS:
      value: '-c statement_timeout=$(POSTGRESQL_STATEMENT_TIMEOUT)'
      order: 1

  configEnv: &configEnv
    <<: *dbEnv
    RELEASE_NAME:
      type: configMap
      name: env
      key: RELEASE_NAME
    TILECLOUDCHAIN_INTERNAL_URL:
      value: http://$(RELEASE_NAME)-tilecloudchain/
      order: 1
    GEOPORTAL_INTERNAL_URL:
      value: http://$(RELEASE_NAME)-geoportal/
      order: 1
    QGISSERVER_URL:
      value: http://$(RELEASE_NAME)-qgisserver/
      order: 1
    VISIBLE_WEB_HOST:
      # type: configMap
      # name: ingress
      # key: WEB_HOST
      value: 'example.com'
    VISIBLE_WEB_PROTOCOL:
      value: https
    VISIBLE_ENTRY_POINT:
      value: /
    MAPSERVER_DATA_SUBSELECT:
      value: >
        SELECT ST_Collect(ra.area)
        FROM $(PGSCHEMA).restrictionarea AS ra,
        $(PGSCHEMA).role_restrictionarea AS rra,
        $(PGSCHEMA).layer_restrictionarea AS lra,
        $(PGSCHEMA).treeitem AS la
        WHERE rra.role_id in (%role_ids%) AND rra.restrictionarea_id = ra.id
        AND lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name =
      order: 1
    MAPSERVER_DATA_NOAREA_SUBSELECT:
      value: >
        SELECT rra.role_id
        FROM $(PGSCHEMA).restrictionarea AS ra,
        $(PGSCHEMA).role_restrictionarea AS rra,
        $(PGSCHEMA).layer_restrictionarea AS lra,
        $(PGSCHEMA).treeitem AS la
        WHERE rra.restrictionarea_id = ra.id AND lra.restrictionarea_id = ra.id
        AND lra.layer_id = la.id AND la.name =
      order: 1
    MAPSERVER_JOIN_TABLES:
      value: >
        $(PGSCHEMA).restrictionarea AS ra,
        $(PGSCHEMA).role_restrictionarea AS rra,
        $(PGSCHEMA).layer_restrictionarea AS lra,
        $(PGSCHEMA).treeitem AS la
      order: 1
    MAPSERVER_JOIN_WHERE:
      value: >
        rra.role_id in (%role_ids%) AND rra.restrictionarea_id = ra.id AND
        lra.restrictionarea_id = ra.id AND lra.layer_id = la.id AND la.name =
      order: 1

image: &geoportal-image
  repository: camptocamp/geomapfishapp-geoportal
  tag: '2.7'
env:
  <<: [*configEnv, *c2cwsgiutilsEnv]
  SENTRY_CLIENT_RELEASE:
    type: configMap
    name: env
    key: GEOPORTAL_IMAGE_TAG
  SENTRY_TAG_SERVICE:
    value: geoportal
  AUTHTKT_SECRET:
    value: secret012345678901234567890123456789012345678901234567890123456789
resources:
  limits:
    memory: 400Mi
  requests:
    memory: 271Mi
    cpu: 88m

config:
  image:
    repository: camptocamp/geomapfishdemo-config
    tag: prod-2-7
  env:
    <<: *configEnv
    VISIBLE_WEB_PROTOCOL:
      value: https

alembic:
  image: *geoportal-image
  mainStatic: true
  env:
    <<: [*configEnv, *c2cwsgiutilsEnv]
    SENTRY_CLIENT_RELEASE:
      type: configMap
      name: env
      key: ALEMBIC_IMAGE_TAG
    SENTRY_TAG_SERVICE:
      value: alembic
  resources:
    limits:
      memory: 200Mi
    requests:
      memory: 171Mi
      cpu: 88m

tools:
  image:
    repository: camptocamp/geomapfish-tools
    tag: '2.7'
  env:
    <<: *configEnv
  resources:
    limits:
      memory: 200Mi
    requests:
      memory: 100Mi
      cpu: 1m

mutualize:
  enabled: true
  environment: test
  repository: camptocamp/test
  branch: master
  secret: admin1234
  # Should be https://config.mutualize(-int)?.camptocamp.com
  configUrl: https://config.mutualized.example.com
  webhook:
    annotations:
      test: webhook
  sharedConfig:
    annotations:
      test: sharedConfig
  configs:
    test-print:
      dir: print/print-apps/test
      env:
        TEST: test
    test-tilecloudchain:
      hosts:
        - name: main
          host: demo.camptocamp.com
        - name: test
          host: demo-test.camptocamp.com
      dir: tilegeneration
      tilecloudchain: true
      env:
        TEST: test
  redirect:
    hosts:
      - example.com
    annotations:
      test: redirect

ingress:
  enabled: false
