{{- if and .Values.tilecloudchain.enabled .Values.mapcache.enabled -}}
apiVersion: apps/v1
kind: Deployment
{{- $service := "mapcache" }}
metadata:
  name: {{ template "c2cgeoportal.fullname" . }}-{{ $service }}
  labels:
    app: {{ template "c2cgeoportal.fullname" . }}
    chart: {{ template "c2cgeoportal.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
    service: {{ $service }}
  {{- if .Values.openshift }}
  annotations:
    image.openshift.io/triggers: |
      [
        {{ template "c2cgeoportal.trigger" (dict "image" "config" "tag" .Values.image.tag "initContainer" "mapcache-config" "root" . ) }},
        {{ template "c2cgeoportal.trigger" (dict "image" "mapcache" "tag" .Values.mapcache.image.tag "container" "mapcache" "root" . ) }}
      ]
  {{- end }}
spec:
  replicas: {{ .Values.mapcache.replicaCount }}
  strategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: {{ template "c2cgeoportal.fullname" . }}
      release: {{ .Release.Name }}
      service: {{ $service }}
  template:
    metadata:
      labels:
        app: {{ template "c2cgeoportal.fullname" . }}
        release: {{ .Release.Name }}
        service: {{ $service }}
    spec:
      terminationGracePeriodSeconds: 5
      {{- include "commonPodConfig" (dict "service" .Values.mapcache "affinitySelector" (dict "release" .Release.Name "service" $service) "root" .) | indent 6 }}
      initContainers:
        - name: mapcache-config
          args: ['bash', '-c', 'cp -a /etc/mapcache/* /etc/mapcache-volume/']
          {{- template "c2cgeoportal.config" . }}
          volumeMounts:
            - mountPath: /etc/mapcache-volume
              name: configs
      containers:
        - name: mapcache
          {{- if .Values.openshift }}
          image: " "
          {{- else }}
          image: {{ .Values.mapcache.image.name }}:{{ .Values.mapcache.image.tag }}
          {{- end }}
          imagePullPolicy: {{ .Values.openshift | ternary "IfNotPresent" .Values.image.externalPullPolicy }}
          volumeMounts:
            - mountPath: /etc/mapcache
              name: configs
              readOnly: true
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
          readinessProbe:
            httpGet:
              path: /mapcache/wmts?SERVICE=WMTS&REQUEST=GetCapabilities
              port: http
            initialDelaySeconds: 5
          securityContext:
            runAsNonRoot: true
            {{- if not .Values.openshift }}
            runAsUser: 33  # www-data
            {{- end }}
          env:
            - name: MAX_REQUESTS_PER_PROCESS
              value: "100"
            - name: SERVER_LIMIT
              value: "3"
            - name: MAX_REQUEST_WORKERS
              value: "75"
            - name: THREADS_PER_CHILD
              value: "25"
            - name: MIN_SPARE_THREADS
              value: "5"
            - name: PGOPTIONS
              value: "-c statement_timeout={{ .Values.postgresql.statementTimeout}}"
          {{- include "common.containerConfig" (dict "service" .Values.mapcache "root" .) | indent 10 }}
      volumes:
        - name: configs
          emptyDir: {}
  revisionHistoryLimit: {{ .Values.revisionHistoryLimit }}
{{- end -}}
