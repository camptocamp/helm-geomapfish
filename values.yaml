global:
  image:
    pullSecrets: []
    pullPolicy: IfNotPresent
  configMapNameOverride: {}
  revisionHistoryLimit: 3

nameOverride: ''
fullnameOverride: ''

replicaCount: 1

entrypoint: /

env: {}
annotations: {}

serviceName: geoportal
image: &image
  repository: camptocamp/geomapfishapp-geoportal
  tag: latest
  sha:

config:
  image:
    repository: camptocamp/<project>-config
    tag: latest
    sha:
  env: {}
  resources: {}

mutualize:
  enabled: false
  serviceName: mutualize
  environment: ''
  repository: camptocamp/to-fill
  branch: master
  # Should be https://config.mutualize(-int)?.camptocamp.com
  configUrl: to-fill
  tccService: false
  webhook:
    annotations: {}
  sharedConfig:
    annotations: {}
  configs: {}
  #  test-print:
  #    host: demo.camptocamp.com
  #    dir: print/print-apps/test
  #    env:
  #      TEST: test
  #  test-tilecloudchain:
  #    host: demo.camptocamp.com
  #    dir: tilegeneration
  #    tilecloudchain: true
  #    env:
  #      TEST: test
  redirect:
    hosts: []
    annotations: {}

  rbac: false
  rbacGroups: []

probe:
  liveness:
    healthCheckLevel: 0
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 30
  readiness:
    healthCheckLevel: 0
    initialDelaySeconds: 30
    periodSeconds: 20
    timeoutSeconds: 30

alembic:
  enabled: true
  image: *image
  serviceName: alembic
  env: {}
  annotations: {}
  resources: {}

tools:
  serviceName: tools
  enabled: true
  image:
    repository: camptocamp/geomapfish-tools
    tag: latest
    sha:
  env: {}
  annotations: {}
  resources: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: false
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: default

podSecurityContext: {}
  # fsGroup: 2000

securityContext:
  runAsNonRoot: true
  runAsUser: 33 # www-data
  # capabilities:
  #   drop:
  #   - ALL

service:
  type: ClusterIP
  port: 80

ingress:
  enabled: false
  annotations: {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  paths: []
  hosts: []
    # - host: chart-example.local
    #   tls:
    #     secretName: chart-example-tls

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

nodeSelector: {}

tolerations: []

affinity: {}

podMonitor:
  enabled: false
  endpoint:
    honorLabels: true
    interval: 10s
    port: prometheus
